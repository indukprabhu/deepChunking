#!/usr/bin/env bash
# DO NOT EDIT - This file was automatically generated.
UNAME=`uname -smp | sed -e 's/ /,/g'`
FILE_SEP='/'; if [[ "$UNAME" = CYGWIN* ]]; then FILE_SEP='\\'; fi
PATH_SEP=':'; if [[ "$UNAME" = CYGWIN* ]]; then PATH_SEP=';'; fi

prog="$(readlink "$0" 2>&1)"
[ $? -eq 127 -o "$prog" = "" ] && prog="$0"
TOP="$(cd "$(dirname "$prog")/.." && pwd)"
if [[ "$UNAME" = CYGWIN* ]]; then PATH="$PATH:$TOP/lib"; TOP="$(cygpath -am "$TOP")"; fi

[ -n "$JAVA_HOME" ] || JAVA_HOME='/home/induk/Softwares/jdk1.7.0_51'
[ -n "$JRE_HOME" ] || JRE_HOME='/home/induk/Softwares/jdk1.7.0_51/jre'
if [[ "$UNAME" = CYGWIN* ]]; then JAVA_HOME="$(cygpath -am "$JAVA_HOME")"; JRE_HOME="$(cygpath -am "$JRE_HOME")"; fi
if [ -n "$JAVA_HOME" -a -e "$JAVA_HOME/bin/java" ]; then
    JAVA="$JAVA_HOME/bin/java"
    JAR="$JAVA_HOME/bin/jar"
elif [ -n "$JRE_HOME" -a -e "$JRE_HOME/bin/java" ]; then
    JAVA="$JRE_HOME/bin/java"
    JAR="$JRE_HOME/bin/jar"
else
    echo "JAVA_HOME ($JAVA_HOME) is not pointing to a JRE or a JDK"
    exit 1
fi
if [[ "$UNAME" = CYGWIN* ]]; then JAVA="$(cygpath -au "$JAVA")"; JAR="$(cygpath -au "$JAR")"; fi

# NOTE: the above assumes that Cygwin==win32 (probably valid)

#CONFIG_FILE='standard.cfg'
LPG_JAR='lpg.jar'
ECJ_JAR='ecj-4.3.2.jar'
WALA_JAR='com.ibm.wala.cast.java_1.0.0.201101071300.jar'
WALA2_JAR='com.ibm.wala.cast_1.0.0.201101071300.jar'
WALA3_JAR='com.ibm.wala.core_1.1.3.201101071300.jar'
SHRIKE_JAR='com.ibm.wala.shrike_1.3.1.201101071300.jar'
MATH_JAR='commons-math3-3.2.jar'
LOG_JAR='commons-logging-1.1.3.jar'
LOGGING_PROPERTIES='logging.properties'
CROSS_COMPILE_BGQ='false'
CROSS_COMPILE_FX10='false'
X10RT_PAMI_IS_DEFAULT='false'

testFailed() {
  rc=$?

  echo ""
  echo ""
  echo "FAILURE!!!"
  exit $rc
}

echo "Running precommit tests for X10"

ROOT="$TOP/.."

echo "Rebuilding X10"

cd "$ROOT/x10.dist"
target=dist
[ "$1" = "cpp" -o "$1" = "-cpp" -o "$1" = "-c++" ] && target=dist-cpp && shift
[ "$1" = "java" -o "$1" = "-java" ] && target=dist-java && shift
nice ant "$@" squeakyclean || testFailed
nice ant -Doptimize=true "$@" $target || testFailed

echo "Making temp dir"
if [ -z "$TMP_DIR" ]; then
  export TMP_DIR=/tmp/precommit-$USER
fi
if [[ "$UNAME" = CYGWIN* ]]; then TMP_DIR="$(cygpath -am "$TMP_DIR")"; fi

rm -rf "$TMP_DIR"
mkdir -p "$TMP_DIR"

echo "Testing"

echo "Running front-end RunTestSuite on FrontEndTests_MustFailCompile.x10"
cd "$TMP_DIR"
nice $JAVA -Xmx1G -ea -DQUIET=true -cp "$ROOT/x10.dist/lib/x10c.jar${PATH_SEP}$ROOT/x10.dist/lib/lpg.jar" x10.util.RunTestSuite "$ROOT/x10.tests/tests/Misc/x10/frontend/tests/FrontEndTests_MustFailCompile.x10" -extclass x10c.ExtensionInfo -sourcepath "$ROOT/x10.dist/stdlib/x10.jar" -sourcepath "$ROOT/x10.tests/tests/x10lib" -commandlineonly || testFailed

if [ "$target" != "dist-java" ]; then

echo "Compiling PreCommit.x10 with x10c++"

cd "$ROOT/x10.tests/tests-inactive/Misc"

nice "$ROOT/x10.dist/bin/x10c++" -O -DEBUG \
 -sourcepath "$ROOT/x10.dist/samples/tutorial" \
 -sourcepath "$ROOT/x10.tests/tests/x10lib" \
 -sourcepath "$ROOT/x10.tests/tests/APGAS/Async" \
 -sourcepath "$ROOT/x10.tests/tests/APGAS/At" \
 -sourcepath "$ROOT/x10.tests/tests/APGAS/Atomic" \
 -sourcepath "$ROOT/x10.tests/tests/APGAS/Clock" \
 -sourcepath "$ROOT/x10.tests/tests/APGAS/Place" \
 -sourcepath "$ROOT/x10.tests/tests/Arrays/Distribution" \
 -sourcepath "$ROOT/x10.tests/tests/Arrays/Region" \
 -sourcepath "$ROOT/x10.tests/tests/Constructs/Call" \
 -sourcepath "$ROOT/x10.tests/tests/Constructs/Cast" \
 -sourcepath "$ROOT/x10.tests/tests/Constructs/Closures" \
 -sourcepath "$ROOT/x10.tests/tests/Constructs/For" \
 -sourcepath "$ROOT/x10.tests/tests/Constructs/Import" \
 -sourcepath "$ROOT/x10.tests/tests/Constructs/Instanceof" \
 -sourcepath "$ROOT/x10.tests/tests/Constructs/Structs" \
 -sourcepath "$ROOT/x10.tests/tests/Types/DepType" \
 -sourcepath "$ROOT/x10.tests/tests/Types/Generics" \
 -sourcepath "$ROOT/x10.tests/tests/Types/Typedefs" \
-d "$TMP_DIR" -o "$TMP_DIR/PreCommit" PreCommit.x10 || testFailed

echo "Running"

X10_NPLACES=2 X10_HOSTLIST=localhost "$ROOT/x10.dist/bin/runx10" "$TMP_DIR/PreCommit" || testFailed

fi

if [ "$target" != "dist-cpp" ]; then

echo "Compiling PreCommit.x10 with x10c"

# create temp dir for classes
rm -rf "${TMP_DIR}.tmp"
mkdir -p "${TMP_DIR}.tmp"

cd "$ROOT/x10.tests/tests-inactive/Misc"

nice "$ROOT/x10.dist/bin/x10c" -O \
 -sourcepath "$ROOT/x10.dist/samples/tutorial" \
 -sourcepath "$ROOT/x10.tests/tests/x10lib" \
 -sourcepath "$ROOT/x10.tests/tests/APGAS/Async" \
 -sourcepath "$ROOT/x10.tests/tests/APGAS/At" \
 -sourcepath "$ROOT/x10.tests/tests/APGAS/Atomic" \
 -sourcepath "$ROOT/x10.tests/tests/APGAS/Clock" \
 -sourcepath "$ROOT/x10.tests/tests/APGAS/Place" \
 -sourcepath "$ROOT/x10.tests/tests/Arrays/Distribution" \
 -sourcepath "$ROOT/x10.tests/tests/Arrays/Region" \
 -sourcepath "$ROOT/x10.tests/tests/Constructs/Call" \
 -sourcepath "$ROOT/x10.tests/tests/Constructs/Cast" \
 -sourcepath "$ROOT/x10.tests/tests/Constructs/Closures" \
 -sourcepath "$ROOT/x10.tests/tests/Constructs/For" \
 -sourcepath "$ROOT/x10.tests/tests/Constructs/Import" \
 -sourcepath "$ROOT/x10.tests/tests/Constructs/Instanceof" \
 -sourcepath "$ROOT/x10.tests/tests/Constructs/Structs" \
 -sourcepath "$ROOT/x10.tests/tests/Types/DepType" \
 -sourcepath "$ROOT/x10.tests/tests/Types/Generics" \
 -sourcepath "$ROOT/x10.tests/tests/Types/Typedefs" \
-d "${TMP_DIR}.tmp" -o "$TMP_DIR/PreCommit.jar" PreCommit.x10 || testFailed

echo "Running"

X10_NPLACES=2 X10_HOSTLIST=localhost "$ROOT/x10.dist/bin/x10" -classpath "$TMP_DIR/PreCommit.jar" PreCommit || testFailed

fi

echo ""
echo ""
echo "SUCCESS"
