#!/usr/bin/env bash
# DO NOT EDIT - This file was automatically generated.
UNAME=`uname -smp | sed -e 's/ /,/g'`
FILE_SEP='/'; if [[ "$UNAME" = CYGWIN* ]]; then FILE_SEP='\\'; fi
PATH_SEP=':'; if [[ "$UNAME" = CYGWIN* ]]; then PATH_SEP=';'; fi

prog="$(readlink "$0" 2>&1)"
[ $? -eq 127 -o "$prog" = "" ] && prog="$0"
TOP="$(cd "$(dirname "$prog")/.." && pwd)"
if [[ "$UNAME" = CYGWIN* ]]; then PATH="$PATH:$TOP/lib"; TOP="$(cygpath -am "$TOP")"; fi

[ -n "$JAVA_HOME" ] || JAVA_HOME='/home/induk/Softwares/jdk1.7.0_51'
[ -n "$JRE_HOME" ] || JRE_HOME='/home/induk/Softwares/jdk1.7.0_51/jre'
if [[ "$UNAME" = CYGWIN* ]]; then JAVA_HOME="$(cygpath -am "$JAVA_HOME")"; JRE_HOME="$(cygpath -am "$JRE_HOME")"; fi
if [ -n "$JAVA_HOME" -a -e "$JAVA_HOME/bin/java" ]; then
    JAVA="$JAVA_HOME/bin/java"
    JAR="$JAVA_HOME/bin/jar"
elif [ -n "$JRE_HOME" -a -e "$JRE_HOME/bin/java" ]; then
    JAVA="$JRE_HOME/bin/java"
    JAR="$JRE_HOME/bin/jar"
else
    echo "JAVA_HOME ($JAVA_HOME) is not pointing to a JRE or a JDK"
    exit 1
fi
if [[ "$UNAME" = CYGWIN* ]]; then JAVA="$(cygpath -au "$JAVA")"; JAR="$(cygpath -au "$JAR")"; fi

# NOTE: the above assumes that Cygwin==win32 (probably valid)

#CONFIG_FILE='standard.cfg'
LPG_JAR='lpg.jar'
ECJ_JAR='ecj-4.3.2.jar'
WALA_JAR='com.ibm.wala.cast.java_1.0.0.201101071300.jar'
WALA2_JAR='com.ibm.wala.cast_1.0.0.201101071300.jar'
WALA3_JAR='com.ibm.wala.core_1.1.3.201101071300.jar'
SHRIKE_JAR='com.ibm.wala.shrike_1.3.1.201101071300.jar'
MATH_JAR='commons-math3-3.2.jar'
LOG_JAR='commons-logging-1.1.3.jar'
LOGGING_PROPERTIES='logging.properties'
CROSS_COMPILE_BGQ='false'
CROSS_COMPILE_FX10='false'
X10RT_PAMI_IS_DEFAULT='false'

help=""
verbose=""
extra_cp=""
x10_args=""
args=""
java_main=""

parse=true
while [ -n "${1}" ]; do
    if [ -z "${parse}" ]; then
        args="${args} '${1}'"
        [ -z "${java_main}" ] && java_main="${1}"
        shift
        continue
    fi
    case "${1}" in
        -h|-help|--help) help="1"; break;;
        -v|-verbose|--verbose) verbose="1";;
        -classpath|-cp)
            shift
            if [ -z "${extra_cp}" ] ; then
                extra_cp="${1}"
            else
                extra_cp="${extra_cp}${PATH_SEP}${1}"
            fi
            ;;
        -preload)
            shift
            ;;
        --) parse=;;
        -*) x10_args="${x10_args} '${1}'";;
        *) args="${args} '${1}'"
	   [ -z "${java_main}" ] && java_main="${1}"
           parse=;;
    esac
    shift
done


if [ -n "$help" -o -z "${args}" ]; then
    cat << EOF
Usage: runjava [options] <java-main-class> [arg0 arg1 ...]
where [options] includes all x10 options, and:
    -preload <class>         class to be preloaded (ignored)
EOF
    exit 1
fi


cp="${TOP}${FILE_SEP}lib${FILE_SEP}RunJava.jar"
[ -n "${extra_cp}" ] && cp="${extra_cp}${PATH_SEP}${cp}"

command="\"${TOP}${FILE_SEP}bin${FILE_SEP}x10\" ${x10_args} -classpath \"${cp}\" RunJava ${args}"

[ -n "$verbose" ] && echo "$command"

eval "$command"
exit $?
